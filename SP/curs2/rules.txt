Правила семантики языка МИКРОЛИСП.

    *1. Любая процедура, вызванная в программе, должна быть в этой
    программе определена. 
    
    ?*2. Область видимости имени процедуры – вся программа(глобальная
    область видимости). В тексте программы вызов процедуры может как
    предшествовать определению процедуры, так и следовать за ним.
    Первый вызов еще не определенной процедуры считается ее
    объявлением. Это правило разрешает определять взаимно рекурсивные
    процедуры.
    
    *3. В глобальной области видимости неявно предопределены 
    элементарные математические процедуры и математические константы.
    
    *4. Сигнатуры вызова и определения процедуры должны совпадать.
    Сигнатура определяется количеством(арностью) и упорядоченным
    набором типов параметров. Тип параметра может быть числовым
    или булевским.

    *5. В программе могут быть определены глобальные переменные.
    Область видимости глобальной переменной  -  вся программа.(см. п.2)
    
    *6. Все имена в глобальной области видимости должны быть уникальными,
    т.е. в глобальной области видимости имена нельзя переопределять.

    *7. Имена параметров каждой процедуры формируют отдельную область
    видимости, вложенную в глобальную. Область видимости параметра
    простирается до конца тела процедуры. В пределах своей области
    видимости имя параметра маскирует  любое глобальное имя и 
    считается именем переменной.
Определение (define (f f) f)  корректно. В теле процедуры,  
f -  имя параметра.
Определение (define (f f) (f 1))  некорректно.  Процедуру f
рекурсивно вызвать нельзя.

    *8. Имена параметров одной процедуры должны быть уникальными.

    9. Форма let определяет локальные переменные. Область видимости
    локальной  переменной - тело let. Она начинается сразу после
    списка переменных.

    10. Область видимости локальных переменных вложена в область
    видимости параметров процедуры, т.е. имя локальной переменной
    может совпадать как с именем параметра, так и с глобальным  именем.
    
    11. Локальные переменные нельзя переопределять.

    12. Выражения-идентификаторы могут быть только именами констант,
    параметров или переменных, но не процедур.  Из этого следует, что
    имена процедур нельзя передавать в качестве параметров. Выражение 
    должно находиться в области видимости переменной или параметра.

    13. Идентификатор в выражении присваивания должен быть именем 
    переменной или параметра, но не именем процедуры или константы. 
    Выражение должно находиться в области видимости переменной или 
    параметра.

    14. Идентификатор вызова процедуры должен быть именем процедуры.
    Он не может быть именем параметра или переменной.